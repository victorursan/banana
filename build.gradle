plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'nu.studer.jooq' version '4.2'
}

group 'com.victor'
version '1.0.0-SNAPSHOT'

repositories {
    mavenCentral()
}

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "src/main/conf"
        }
    }
}

application {
    applicationDefaultJvmArgs = ['-Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.SLF4JLogDelegateFactory']
    mainClassName = 'io.vertx.core.Launcher'
}

compileJava {
    sourceCompatibility = JavaVersion.VERSION_14
    targetCompatibility = JavaVersion.VERSION_14
}


def mainVerticleName = 'com.victor.banana.verticles.SupervisorVerticle'

run {
    args = ['run', mainVerticleName]
}

ext {
    vertxVersion = '3.9.1'
    telegrambotsVersion = '4.8.1'
    slf4jVersion = '1.7.30'
    jooqVersion = '3.13.2'
    lombokVersion = '1.18.12'
    postgresqlVersion = '42.2.12'
    vertxJooqVersion = '5.1.1'
    jacksonVersion = '2.11.0'
    apacheCommonsVersion = '1.8'
    keycloakVersion = '10.0.1'
    logbackVersion = '1.2.3'
    logstashVersion = '6.3'
}

dependencies {
    //lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    //vertx
    implementation group: 'io.vertx', name: 'vertx-core', version: vertxVersion
    implementation group: 'io.vertx', name: 'vertx-web', version: vertxVersion
    implementation group: 'io.vertx', name: 'vertx-config', version: vertxVersion
    implementation group: 'io.vertx', name: 'vertx-health-check', version: vertxVersion
    implementation group: 'io.vertx', name: 'vertx-pg-client', version: vertxVersion
    implementation group: 'io.vertx', name: 'vertx-auth-oauth2', version: vertxVersion
    implementation group: 'io.vertx', name: 'vertx-web-api-contract', version: vertxVersion

    implementation group: 'io.vertx', name: 'vertx-service-proxy', version: vertxVersion
    annotationProcessor group: 'io.vertx', name: 'vertx-service-proxy', version: vertxVersion, classifier: 'processor'
    implementation group: 'io.vertx', name: 'vertx-codegen', version: vertxVersion
    annotationProcessor group: 'io.vertx', name: 'vertx-codegen', version: vertxVersion, classifier: 'processor'

    //telegram
    implementation group: 'org.telegram', name: 'telegrambots', version: telegrambotsVersion
    implementation group: 'org.telegram', name: 'telegrambotsextensions', version: telegrambotsVersion

    //jooq
    implementation group: 'org.jooq', name: 'jooq', version: jooqVersion
    jooqRuntime group: 'org.postgresql', name: 'postgresql', version: postgresqlVersion
    jooqRuntime group: 'io.github.jklingsporn', name: 'vertx-jooq-generate', version: vertxJooqVersion
    implementation group: 'io.github.jklingsporn', name: 'vertx-jooq-classic-reactive', version: vertxJooqVersion

    //jackson
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jdk8', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: jacksonVersion
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-parameter-names', version: jacksonVersion

    // other
    implementation group: 'org.apache.commons', name: 'commons-text', version: apacheCommonsVersion

    // logging
    implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    implementation group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: logstashVersion
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: logbackVersion

    //keycloak
    implementation group: 'org.keycloak', name: 'keycloak-admin-client', version: keycloakVersion


    //test
    testImplementation group: 'io.vertx', name: 'vertx-junit5', version: vertxVersion
    testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

wrapper {
    gradleVersion = '6.4'
}

jooq {
    version = jooqVersion
    sample(sourceSets.main) {
        jdbc {
            driver = 'org.postgresql.Driver'
            url = 'jdbc:postgresql://localhost:5432/postgres'
            user = 'postgres'
            password = 'P@ssw0rd'
        }
        generator {
            name = 'io.github.jklingsporn.vertx.jooq.generate.classic.ClassicReactiveVertxGenerator'
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                inputSchema = 'public'
                includes = '.*'
                excludes = 'flyway_schema_history'
            }
            generate {
                deprecated = false
                records = true
                interfaces = false
                fluentSetters = true
                pojos = false
                daos = true
            }

            target {
                packageName = 'com.victor.banana.jooq'
            }
            strategy {
                name = 'io.github.jklingsporn.vertx.jooq.generate.VertxGeneratorStrategy'
            }
        }
    }
}

tasks.generateSampleJooqSchemaSource.with {
    def out = new ByteArrayOutputStream()
    javaExecSpec = { JavaExecSpec execSpec ->
        execSpec.standardOutput = out
        execSpec.errorOutput = out
        execSpec.ignoreExitValue = true
        execSpec.jvmArgs '-Xmx512M'
    }
    execResultHandler = { ExecResult r ->
        if (r.exitValue != 0) {
            throw new RuntimeException('jOOQ source code generation failed:\n\n' + out.toString())
        }
    }
}
